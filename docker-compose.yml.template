# --------------------------------------
# (c) cavaliba.com - docker-compose.yml
# --------------------------------------

networks:
    default:
      name: ${CAVALIBA_TENANT:-cavaliba}

services:

  cavaliba_nginx:
    image: nginx:1.25.2
    container_name: ${CAVALIBA_TENANT:-cavaliba}_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      #- ./htpasswd:/etc/nginx/htpasswd
      #- ./log/:/var/log/nginx/
      - ./files/logo:/logo
      - static_volume:/static_collect
    ports:
      - ${CAVALIBA_PORT:-80}:80
      #- 443:443
    env_file:
      - ./.env
    # depends_on:
    #   - cavaliba_app
    depends_on:
        cavaliba_app:
          condition: service_healthy


  cavaliba_app:
    #build: 
    #   context: ./django
    #   dockerfile: Dockerfile
    image: ${CAVALIBA_DOCKER_IMAGE}
    container_name: ${CAVALIBA_TENANT:-cavaliba}_app
    #command: python manage.py runserver 0.0.0.0:8001
    command: /docker-entrypoint.sh
    #command: gunicorn mysite.wsgi:application --bind 0.0.0.0:8001 --log-level info --access-logfile '-' --error-logfile '-' --graceful-timeout 3 --workers 2
    volumes:
      # dev mode - map source/ for auto-reload
      #- ./source/:/app
      - ./files:/files
      - static_volume:/static_collect
    expose:
      - 8001
    environment:
      DJANGO_SUPERUSER_PASSWORD: ${CAVALIBA_ADMIN_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${CAVALIBA_ADMIN_EMAIL}
    env_file:
      - ./.env
    healthcheck:
        test: curl http://localhost:8001/status/
        interval: 5s
        timeout: 20s
        retries: 10
    depends_on:
        cavaliba_redis:
          condition: service_healthy
        cavaliba_db:
          condition: service_healthy


  cavaliba_celery:
    #build: 
    #   context: ./source
    #   dockerfile: Dockerfile    
    image: ${CAVALIBA_DOCKER_IMAGE}
    container_name: ${CAVALIBA_TENANT:-cavaliba}_celery    
    working_dir: /app
    command: celery --workdir /app -A core worker --loglevel=info --concurrency 3
    volumes:
      - ./files:/files      
      - static_volume:/static_collect
    env_file:
      - ./.env
    depends_on:
        cavaliba_redis:
          condition: service_healthy
        cavaliba_db:
          condition: service_healthy

# Uncomment to enable oauth2_proxy authentication (see doc)

  # cavaliba_oa2p:
  #   image: bitnami/oauth2-proxy:7.4.0
  #   #container_name: cavaliba_oa2p
  #   container_name: ${CAVALIBA_TENANT:-cavaliba}_oa2p
  #   restart: always
  #   command:
  #      - --config=/etc/oa2p.cfg
  #      - --cookie-expire=0h45m0s
  #   volumes:
  #     - ./oa2p_okta.cfg:/etc/oa2p.cfg:ro
  #   env_file:
  #     - ./.env
  #   expose:
  #     - 4180
  #   depends_on:
  #       cavaliba_redis:
  #         condition: service_healthy

  # MariaDB
  # uncomment to use / comment to switch to PostGreSQL
  cavaliba_db:
    image: mariadb:10.10
    #container_name: cavaliba_db
    container_name: ${CAVALIBA_TENANT:-cavaliba}_db
    volumes:
      - ./db:/var/lib/mysql
    expose:
      - 3306
    environment:
      MARIADB_DATABASE: ${CAVALIBA_DB_DATABASE}
      MARIADB_USER: ${CAVALIBA_DB_USER}
      MARIADB_PASSWORD: ${CAVALIBA_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${CAVALIBA_DB_ROOT_PASSWORD}
    # env_file:
    #   - ./.env
    command: --innodb-buffer-pool-size=256M
    healthcheck:
        test: mysqladmin ping -h 127.0.0.1 -u $$MARIADB_USER --password=$$MARIADB_PASSWORD
        interval: 2s
        timeout: 20s
        retries: 10

#  #postgres
#  # uncomment & comment MariaDB to use
#  cavaliba_db:
#    container_name: cavaliba_db
#    image: postgres:17.2
#    environment:
#      POSTGRES_USER: ${CAVALIBA_DB_USER:-postgres}
#      POSTGRES_PASSWORD: ${CAVALIBA_DB_PASSWORD:-changeme}
#      PGDATA: /data/postgres
#    volumes:
#       - ./db:/data/postgres
#    expose:
#      - 5432
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready", "-d", "cavaliba"]
#      interval: 30s
#      timeout: 60s
#      retries: 5
#      start_period: 80s  


  cavaliba_redis:
    image: redis:7.0.2-alpine3.16
    #container_name: cavaliba_redis
    container_name: ${CAVALIBA_TENANT:-cavaliba}_redis
    expose:
      - 6379
    env_file:
      - ./.env
    healthcheck:
        test: ["CMD", "redis-cli","ping"]
        interval: 2s
        timeout: 20s
        retries: 10

volumes:
  static_volume:
